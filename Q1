import cv2
import mediapipe as mp
import numpy as np
from keras.models import load_model
import dlib
detectFace = mp.solutions.face_detection.FaceDetection(min_detection_confidence=0.6)
cam = cv2.VideoCapture(0)
cam.set(3, 1280)
cam.set(4, 720)
font = cv2.FONT_HERSHEY_COMPLEX
model = load_model('keras_model.h5')
def get_className(classNo):
    if classNo == 0:
        cv2.putText(img, 'person = 1', (10, 50), cv2.FONT_HERSHEY_PLAIN, 3,(255, 0, 255), 3)
        return "Yeung Yat(0)"
    elif classNo == 1:
        cv2.putText(img, 'person = 1', (10, 50), cv2.FONT_HERSHEY_PLAIN, 3, (255, 0, 255), 3)
        return "HWL(1)"
    elif classNo == 2:
        cv2.putText(img, 'person = 1', (10, 50), cv2.FONT_HERSHEY_PLAIN, 3, (255, 0, 255), 3)
        return "David(2)"
    elif classNo == 2&1 or 1&3 or 2&3:
        cv2.putText(img, 'person = 2', (10, 50), cv2.FONT_HERSHEY_PLAIN, 3, (255, 0, 255), 3)
        return "Yeung Yat(0)"
        return "HWL(1)"
        return "David(2)"
    elif classNo == 2 & 1 & 3:
        cv2.putText(img, 'person = 3', (10, 50), cv2.FONT_HERSHEY_PLAIN, 3, (255, 0, 255), 3)
        return "Yeung Yat(0)"
        return "HWL(1)"
        return "David(2)"
    else:
        cv2.putText(img, 'Unknown Person', (10, 50), cv2.FONT_HERSHEY_PLAIN, 3, (255, 0, 255), 3)
while True:
    ret, img = cam.read()
    imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
    results = detectFace.process(imgRGB)
    if results.detections != None:
        for face in results.detections:
            # drawFace.draw_detection(img, face)
            boundingBox = face.location_data.relative_bounding_box
            x1 = int(boundingBox.xmin * 1280)
            y1 = int(boundingBox.ymin * 720)
            x2 = int((boundingBox.xmin + boundingBox.width) * 1280)
            y2 = int((boundingBox.ymin + boundingBox.height) * 720)
            pt1 = (x1, y1)
            pt2 = (x2,y2)
            cv2.rectangle(img, pt1, pt2, (255, 0, 0), 3)
            crop_img = img[y1:y2, x1:x2]
            imgResize = cv2.resize(crop_img, (224, 224))
            imgReshape = imgResize.reshape(1, 224, 224, 3)
            prediction = model.predict(imgReshape)
            print(prediction)
            classIndex = np.argmax(prediction)
            print(classIndex)

        if classIndex == 0 or 1 or 2:
            cv2.rectangle(img, (x1, y1), (x2, y2), (80, 255, 0), 2)
            cv2.rectangle(img, (x1, y1 - 40), (x2, y1), (80, 255, 0), -2)
            cv2.putText(img, str(get_className(classIndex)), (x1, y1 - 10), font, 0.75, (255, 255, 255), 1, cv2.LINE_AA)
    cv2.imshow("MBS3523 - Assignment 2 - Face Recognition Result", img)
    if cv2.waitKey(1) & 0xff == 27:
        break

cam.release()
cv2.destroyAllWindows()
